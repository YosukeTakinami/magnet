/* ===============================================
  関数の登録
=============================================== */

/*
  数値から単位を取り除く
----------------------------------------------- */
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

/*
  px→remの計算
----------------------------------------------- */
@function rem($px, $base: 16px) {
  $value: $px;

  // 単位がpx以外の場合は警告を出してそのまま返す
  @if (unit($px) != 'px') {
    @warn 'rem()の引数にpx以外の値を指定しても計算できません';
    @return $value;
  }

  $value: (strip-unit($px) / strip-unit($base)) * 1rem;

  @return $value;
}

/*
  px→vwの計算
----------------------------------------------- */
@function vw($px, $base: 375px) {
  $value: $px;

  // 単位がpx以外の場合は警告を出してそのまま返す
  @if (unit($px) != 'px') {
    @warn 'vw()の引数にpx以外の値を指定しても計算できません';
    @return $value;
  }

  $value: (strip-unit($px) / strip-unit($base)) * 100vw;

  @return $value;
}

/*
  文字列からワードを検索して置換する
----------------------------------------------- */
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

/*
  @font-faceの設定
----------------------------------------------- */
@mixin font-face($family, $path, $weight: normal, $style: normal, $exts: eot woff2 woff ttf svg) {
  $src: null;

  $extmods: (
    eot: '?',
    svg: '#' + str-replace($family, ' ', '_'),
  );

  $formats: (
    otf: 'opentype',
    ttf: 'truetype',
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($family);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}

/*
  object-fit
----------------------------------------------- */
@mixin object-fit($value: fill, $position: null) {
  object-fit: $value;

  @if $position {
    object-position: $position;
    font-family: 'object-fit: #{$value}; object-position: #{$position}', sans-serif;
  }
  @else {
    font-family: 'object-fit: #{$value}', sans-serif;
  }
}
